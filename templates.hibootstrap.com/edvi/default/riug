//Firebase/

{
    "rules": {
      ".read": "auth != null",
      ".write": "auth != null"
    }
  }

  <style>
    .messageDiv{background-color: hsl(327, 90%,28%);
    color: white;
    padding: 10px 20px;
    margin: 10px;
    border-radius: 5px;
    font-size: 1rem;
    opacity: 0;
    animation: fadeOut 7s forwards;}
</style>

  <div id="signInMessage" class="messageDiv" style="display: none;"></div>
   <div id="signUpMessage" class="messageDiv" style="display: none;"></div>


   <div class="dashboard-main-body">
        <div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-24">
  <h6 class="fw-semibold mb-0">Register Staff </h6>
  <ul class="d-flex align-items-center gap-2">
    <li class="fw-medium">
      <a href="index.html" class="d-flex align-items-center gap-1 hover-text-primary">
        <iconify-icon icon="solar:home-smile-angle-outline" class="icon text-lg"></iconify-icon>
        Dashboard
      </a>
    </li>
    <li>-</li>
    <li class="fw-medium">Registered Staff</li>
  </ul>
</div>

        <div class="card h-100 p-0 radius-12">
            <div class="card-header border-bottom bg-base py-16 px-24 d-flex align-items-center flex-wrap gap-3 justify-content-between">
                <div class="d-flex align-items-center flex-wrap gap-3">
                    <span class="text-md fw-medium text-secondary-light mb-0">Show</span>
                    <select class="form-select form-select-sm w-auto ps-12 py-6 radius-12 h-40-px">
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                        <option>6</option>
                        <option>7</option>
                        <option>8</option>
                        <option>9</option>
                        <option>10</option>
                    </select>
                    <form class="navbar-search">
                        <input type="text" class="bg-base h-40-px w-auto" name="search" placeholder="Search">
                        <iconify-icon icon="ion:search-outline" class="icon"></iconify-icon>
                    </form>
                    <select class="form-select form-select-sm w-auto ps-12 py-6 radius-12 h-40-px">
                        <option>Staff Type</option>
                        <option>Teaching </option>
                        <option>Non-Teaching</option>
                    </select>
                    <select class="form-select form-select-sm w-auto ps-12 py-6 radius-12 h-40-px">
                        <option>Status</option>
                        <option>Active</option>
                        <option>Inactive</option>
                    </select>
                </div>
                <button type="button" class="btn btn-primary text-sm btn-sm px-12 py-12 radius-8 d-flex align-items-center gap-2" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    <iconify-icon icon="ic:baseline-plus" class="icon text-xl line-height-1"></iconify-icon>
                    Add New Staff
                </button>
            </div>

            <div class="card-body p-24">
                <div class="table-responsive scroll-sm">
                    <table class="table bordered-table sm-table mb-0">
                      <thead>
                        <tr>
                          <th scope="col">
                            <div class="d-flex align-items-center gap-10">
                                <div class="form-check style-check d-flex align-items-center">
                                    <input class="form-check-input radius-4 border input-form-dark" type="checkbox" name="checkbox" id="selectAll">
                                </div>
                                S.L
                            </div>
                          </th>
                          <th scope="col">Create Date</th>
                          <th scope="col">Role </th>
                          <th scope="col">Name</th>
                          <th scope="col" class="text-center">Status</th>
                          <th scope="col" class="text-center">Action</th>
                        </tr>
                      </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        01
                                    </div>
                                </td>
                                <td>25 Jan 2024</td>
                                <td>Test</td>
                                <td>
                                    <p class="max-w-500-px">Bolu Tolu</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-success-focus text-success-600 border border-success-main px-24 py-4 radius-4 fw-medium text-sm">Active</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        02
                                    </div>
                                </td>
                                <td>25 Jan 2024</td>
                                <td>Waiter</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-danger-focus text-danger-600 border border-danger-main px-24 py-4 radius-4 fw-medium text-sm">Inactive</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        03
                                    </div>
                                </td>
                                <td>10 Feb 2024</td>
                                <td>Manager</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-success-focus text-success-600 border border-success-main px-24 py-4 radius-4 fw-medium text-sm">Active</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        04
                                    </div>
                                </td>
                                <td>10 Feb 2024</td>
                                <td>Project Manager</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-success-focus text-success-600 border border-success-main px-24 py-4 radius-4 fw-medium text-sm">Active</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        05
                                    </div>
                                </td>
                                <td>15 March 2024</td>
                                <td>Game Developer</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-danger-focus text-danger-600 border border-danger-main px-24 py-4 radius-4 fw-medium text-sm">Inactive</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        06
                                    </div>
                                </td>
                                <td>15 March 2024</td>
                                <td>Head</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-success-focus text-success-600 border border-success-main px-24 py-4 radius-4 fw-medium text-sm">Active</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        07
                                    </div>
                                </td>
                                <td>27 April 2024</td>
                                <td>Management</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-success-focus text-success-600 border border-success-main px-24 py-4 radius-4 fw-medium text-sm">Active</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        08
                                    </div>
                                </td>
                                <td>27 April 2024</td>
                                <td>Waiter</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-danger-focus text-danger-600 border border-danger-main px-24 py-4 radius-4 fw-medium text-sm">Inactive</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        09
                                    </div>
                                </td>
                                <td>30 April 2024</td>
                                <td>Waiter</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-success-focus text-success-600 border border-success-main px-24 py-4 radius-4 fw-medium text-sm">Active</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center gap-10">
                                        <div class="form-check style-check d-flex align-items-center">
                                            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox" name="checkbox">
                                        </div>
                                        10
                                    </div>
                                </td>
                                <td>30 April 2024</td>
                                <td>Waiter</td>
                                <td>
                                    <p class="max-w-500-px">Lorem Ipsum is simply dummy text of the printing and typesetting</p>
                                </td>
                                <td class="text-center">
                                    <span class="bg-success-focus text-success-600 border border-success-main px-24 py-4 radius-4 fw-medium text-sm">Active</span> 
                                </td>
                                <td class="text-center"> 
                                    <div class="d-flex align-items-center gap-10 justify-content-center">
                                        <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                                        </button>
                                        <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle"> 
                                            <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="d-flex align-items-center justify-content-between flex-wrap gap-2 mt-24">
                    <span>Showing 1 to 10 of 12 entries</span>
                    <ul class="pagination d-flex flex-wrap align-items-center gap-2 justify-content-center">
                        <li class="page-item">
                            <a class="page-link bg-neutral-200 text-secondary-light fw-semibold radius-8 border-0 d-flex align-items-center justify-content-center h-32-px w-32-px text-md" href="javascript:void(0)"><iconify-icon icon="ep:d-arrow-left" class=""></iconify-icon></a>
                        </li>
                        <li class="page-item">
                            <a class="page-link text-secondary-light fw-semibold radius-8 border-0 d-flex align-items-center justify-content-center h-32-px w-32-px text-md bg-primary-600 text-white" href="javascript:void(0)">1</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link bg-neutral-200 text-secondary-light fw-semibold radius-8 border-0 d-flex align-items-center justify-content-center h-32-px w-32-px" href="javascript:void(0)">2</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link bg-neutral-200 text-secondary-light fw-semibold radius-8 border-0 d-flex align-items-center justify-content-center h-32-px w-32-px text-md" href="javascript:void(0)">3</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link bg-neutral-200 text-secondary-light fw-semibold radius-8 border-0 d-flex align-items-center justify-content-center h-32-px w-32-px text-md" href="javascript:void(0)">4</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link bg-neutral-200 text-secondary-light fw-semibold radius-8 border-0 d-flex align-items-center justify-content-center h-32-px w-32-px text-md" href="javascript:void(0)">5</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link bg-neutral-200 text-secondary-light fw-semibold radius-8 border-0 d-flex align-items-center justify-content-center h-32-px w-32-px text-md" href="javascript:void(0)"> <iconify-icon icon="ep:d-arrow-right" class=""></iconify-icon> </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
  
    <!-- Modal Start -->
     <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog modal-dialog-centered">
            <div class="modal-content radius-16 bg-base">
                <div class="modal-header py-16 px-24 border border-top-0 border-start-0 border-end-0">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Add New Staff Role</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-24">
                    <form action="#">
                        <div class="row">   
                            <div class="col-12 mb-20">
                                <label class="form-label fw-semibold text-primary-light text-sm mb-8">Staff Name : </label>
                                <input type="text" class="form-control radius-8" placeholder="Enter Staff Name">
                            </div>
                            <div class="col-12 mb-20">
                                <label for="desc" class="form-label fw-semibold text-primary-light text-sm mb-8">Date Added :</label>
                                <input type="date" class="form-control radius-8" placeholder="02-10-2025">
                            </div>
                            <div class="col-12 mb-20">
                                <label class="form-label fw-semibold text-primary-light text-sm mb-8">Staff Role : </label>
                                <input type="text" class="form-control radius-8" placeholder="English Teacher">
                            </div>
                            <div class="col-12 mb-20">
                                <label class="form-label fw-semibold text-primary-light text-sm mb-8">Staff Email : </label>
                                <input type="text" class="form-control radius-8" placeholder="Staff-email@gmail.com">
                            </div>
                            <div class="col-12 mb-20">
                                <label class="form-label fw-semibold text-primary-light text-sm mb-8">Class Taken : </label>
                                <input type="text" class="form-control radius-8" placeholder="Enter Class Taken">
                            </div>
                            <div class="col-12 mb-20">
                                <label class="form-label fw-semibold text-primary-light text-sm mb-8">Status </label>
                                <div class="d-flex align-items-center flex-wrap gap-28">
                                    <div class="form-check checked-success d-flex align-items-center gap-2">
                                        <input class="form-check-input" type="radio" name="label" id="Personal">
                                        <label class="form-check-label line-height-1 fw-medium text-secondary-light text-sm d-flex align-items-center gap-1" for="Personal"> 
                                            <span class="w-8-px h-8-px bg-success-600 rounded-circle"></span>
                                            Active
                                        </label>
                                    </div>
                                    <div class="form-check checked-danger d-flex align-items-center gap-2">
                                        <input class="form-check-input" type="radio" name="label" id="Holiday">
                                        <label class="form-check-label line-height-1 fw-medium text-secondary-light text-sm d-flex align-items-center gap-1" for="Holiday"> 
                                            <span class="w-8-px h-8-px bg-danger-600 rounded-circle"></span>
                                            Inactive
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 mb-20">
                                <label class="form-label fw-semibold text-primary-light text-sm mb-8">Status </label>
                                <div class="d-flex align-items-center flex-wrap gap-28">
                                    <div class="form-check checked-success d-flex align-items-center gap-2">
                                        <input class="form-check-input" type="radio" name="label" id="Personal">
                                        <label class="form-check-label line-height-1 fw-medium text-secondary-light text-sm d-flex align-items-center gap-1" for="Personal"> 
                                            <span class="w-8-px h-8-px bg-success-600 rounded-circle"></span>
                                            Teaching
                                        </label>
                                    </div>
                                    <div class="form-check checked-danger d-flex align-items-center gap-2">
                                        <input class="form-check-input" type="radio" name="label" id="Holiday">
                                        <label class="form-check-label line-height-1 fw-medium text-secondary-light text-sm d-flex align-items-center gap-1" for="Holiday"> 
                                            <span class="w-8-px h-8-px bg-danger-600 rounded-circle"></span>
                                            Non-Teaching
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center justify-content-center gap-3 mt-24">
                                <button type="reset" class="border border-danger-600 bg-hover-danger-200 text-danger-600 text-md px-40 py-11 radius-8"> 
                                    Cancel
                                </button>
                                <button type="submit" class="btn btn-primary border border-primary-600 text-md px-48 py-12 radius-8"> 
                                    Save
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal End -->

    <script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-app.js";
  import { getDatabase, ref, set } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-database.js";

  // ✅ Firebase configuration
  const firebaseConfig = {
    apiKey: "AIzaSyCiy2VaTfnuO7eEPL0_kD_WIHcDMB2T6Xs",
    authDomain: "damotak-international-da-230d5.firebaseapp.com",
    databaseURL: "https://damotak-international-da-230d5-default-rtdb.firebaseio.com",
    projectId: "damotak-international-da-230d5",
    storageBucket: "damotak-international-da-230d5.firebasestorage.app",
    messagingSenderId: "947496867501",
    appId: "1:947496867501:web:527ecd025aa713a9a2d824"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const db = getDatabase(app);

  // 🧾 Handle form submission
  document.getElementById("admissionForm").addEventListener("submit", async (event) => {
    event.preventDefault();

    // Collect all form values
    const firstName = document.getElementById("firstName").value.trim();
    const lastName = document.getElementById("lastName").value.trim();

    const student = {
      firstName,
      lastName,
      email: document.getElementById("email").value.trim(),
      mobile: document.getElementById("mobile").value.trim(),
      className: document.getElementById("className").value.trim(),
      joinDate: document.getElementById("joinDate").value,
      address: document.getElementById("address").value.trim(),
      city: document.getElementById("city").value.trim(),
      state: document.getElementById("state").value.trim(),
      submittedAt: new Date().toISOString()
    };

    try {
      // ✨ Generate a readable unique Student ID
      const randomNum = Math.floor(1000 + Math.random() * 9000); // 4-digit random number
      const studentID = `${firstName}-${lastName}${randomNum}`.replace(/\s+/g, '').toLowerCase();

      // ✅ Save student record under custom ID (prevents overwriting)
      await set(ref(db, "Admission Form/" + studentID), student);

      showModal(`✅ Admission Form Submitted Successfully!`);
      document.getElementById("admissionForm").reset();
    } catch (error) {
      showModal("❌ Error: " + error.message);
    }
  });

  // 🪄 Simple modal popup
  function showModal(message) {
    document.getElementById("modalMessage").textContent = message;
    const modal = new bootstrap.Modal(document.getElementById("notificationModal"));
    modal.show();
  }
</script>

// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyBPWX9obom5sNRpK-nTeRGZMTjcF9hrEgI",
  authDomain: "damotak-staff-admin-database.firebaseapp.com",
  projectId: "damotak-staff-admin-database",
  storageBucket: "damotak-staff-admin-database.firebasestorage.app",
  messagingSenderId: "918712741387",
  appId: "1:918712741387:web:fcce2674124286c222a10e"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);


<script type="module">
    // Import the functions you need from the SDKs you need
    import { initializeApp } from "firebase/app";
    import { getDatabase, ref, set, remove, onValue } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-database.js";
    import { getAuth } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-auth.js";

    // Your web app's Firebase configuration
    const firebaseConfig = {
        apiKey: "AIzaSyBPWX9obom5sNRpK-nTeRGZMTjcF9hrEgI",
        authDomain: "damotak-staff-admin-database.firebaseapp.com",
        databaseURL: "https://damotak-staff-admin-database-default-rtdb.firebaseio.com",
        projectId: "damotak-staff-admin-database",
        storageBucket: "damotak-staff-admin-database.firebasestorage.app",
        messagingSenderId: "918712741387",
        appId: "1:918712741387:web:fcce2674124286c222a10e"
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const db = getDatabase(app);
    const auth = getAuth(app);

    let editingStaffId = null; // To keep track of the staff being edited
    let allStaffData = []; // To store all staff data for filtering

    // Load staff data on page load
    loadStaffData();

    document.getElementById('staffForm').addEventListener('submit', async function(event) {
        event.preventDefault();

        const staffName = document.querySelector('input[placeholder="Enter Staff Name"]').value;
        const dateAdded = document.querySelector('input[type="date"]').value;
        const staffRole = document.querySelector('input[placeholder="English Teacher"]').value;
        const staffEmail = document.querySelector('input[placeholder="Staff-email@gmail.com"]').value;
        const classTaken = document.querySelector('input[placeholder="Enter Class Taken"]').value;
        const status = document.querySelector('input[name="status"]:checked').value;

        try {
            const staffId = staffEmail; // Use email as unique key

            if (editingStaffId) {
                // Update existing staff
                await set(ref(db, 'Staff/' + editingStaffId), {
                    name: staffName,
                    dateAdded: dateAdded,
                    role: staffRole,
                    email: staffEmail,
                    classTaken: classTaken,
                    status: status
                });
            } else {
                // Create new staff
                await set(ref(db, 'Staff/' + staffId), {
                    name: staffName,
                    dateAdded: dateAdded,
                    role: staffRole,
                    email: staffEmail,
                    classTaken: classTaken,
                    status: status
                });
            }

            // Show success notification
            document.getElementById('notificationMessage').innerText = "Staff information saved successfully!";
            const notificationModal = new bootstrap.Modal(document.getElementById('notificationModal'));
            notificationModal.show();

            const modal = bootstrap.Modal.getInstance(document.getElementById('exampleModal'));
            modal.hide();
            document.getElementById('staffForm').reset();
            editingStaffId = null; // Reset editing staff ID
            loadStaffData(); // Refresh the staff list
        } catch (error) {
            console.error("Error saving staff: ", error);
            // Show error notification
            document.getElementById('notificationMessage').innerText = "Error saving staff information.";
            const notificationModal = new bootstrap.Modal(document.getElementById('notificationModal'));
            notificationModal.show();
        }
    });

    function loadStaffData() {
        const staffTableBody = document.getElementById('staffTableBody');
        staffTableBody.innerHTML = ''; // Clear existing entries

        const staffRef = ref(db, 'Staff/');
        onValue(staffRef, (snapshot) => {
            allStaffData = []; // Reset the array to store all staff data
            snapshot.forEach((childSnapshot) => {
                const staffData = childSnapshot.val();
                allStaffData.push({ id: childSnapshot.key, ...staffData }); // Store staff data for filtering
                appendRowToTable(staffData, childSnapshot.key);
            });

            // Add event listeners for edit and delete buttons
            addEventListeners();
        });
    }

    function appendRowToTable(staffData, staffId) {
        const staffTableBody = document.getElementById('staffTableBody');
        const row = document.createElement('tr');

        row.innerHTML = `
            <td>${staffId}</td>
            <td>${staffData.dateAdded}</td>
            <td>${staffData.role}</td>
            <td>${staffData.name}</td>
            <td class="text-center">
                <span class="bg-${staffData.status === 'Active' ? 'success' : 'danger'}-focus text-${staffData.status === 'Active' ? 'success' : 'danger'}-600 border border-${staffData.status === 'Active' ? 'success' : 'danger'}-main px-24 py-4 radius-4 fw-medium text-sm">${staffData.status}</span>
            </td>
            <td class="text-center">
                <button type="button" class="bg-success-focus text-success-600 bg-hover-success-200 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle edit-btn" data-id="${staffId}"> 
                    <iconify-icon icon="lucide:edit" class="menu-icon"></iconify-icon>
                </button>
                <button type="button" class="remove-item-btn bg-danger-focus bg-hover-danger-200 text-danger-600 fw-medium w-40-px h-40-px d-flex justify-content-center align-items-center rounded-circle delete-btn" data-id="${staffId}"> 
                    <iconify-icon icon="fluent:delete-24-regular" class="menu-icon"></iconify-icon>
                </button>
            </td>
        `;

        staffTableBody.appendChild(row);
    }

    function addEventListeners() {
        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', function() {
                const staffId = this.getAttribute('data-id');
                editingStaffId = staffId; // Set the staff ID being edited
                loadStaffForEditing(staffId);
            });
        });

        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function() {
                const staffId = this.getAttribute('data-id');
                deleteStaff(staffId);
            });
        });
    }

    function loadStaffForEditing(staffId) {
        const staffRef = ref(db, 'Staff/' + staffId);
        onValue(staffRef, (snapshot) => {
            const staffData = snapshot.val();
            document.querySelector('input[placeholder="Enter Staff Name"]').value = staffData.name;
            document.querySelector('input[type="date"]').value = staffData.dateAdded;
            document.querySelector('input[placeholder="English Teacher"]').value = staffData.role;
            document.querySelector('input[placeholder="Staff-email@gmail.com"]').value = staffData.email;
            document.querySelector('input[placeholder="Enter Class Taken"]').value = staffData.classTaken;
            document.querySelector(`input[name="status"][value="${staffData.status}"]`).checked = true;

            // Show the modal
            const modal = new bootstrap.Modal(document.getElementById('exampleModal'));
            modal.show();
        });
    }

    async function deleteStaff(staffId) {
        try {
            await remove(ref(db, 'Staff/' + staffId));
            loadStaffData(); // Refresh the staff list after deletion
        } catch (error) {
            console.error("Error deleting staff: ", error);
        }
    }

    // Filtering functionality
    document.getElementById('staffTypeFilter').addEventListener('change', filterStaff);
    document.getElementById('statusFilter').addEventListener('change', filterStaff);

    function filterStaff() {
        const selectedType = document.getElementById('staffTypeFilter').value;
        const selectedStatus = document.getElementById('statusFilter').value;

        const filteredData = allStaffData.filter(staff => {
            const matchesType = selectedType ? staff.role.includes(selectedType) : true;
            const matchesStatus = selectedStatus ? staff.status === selectedStatus : true;
            return matchesType && matchesStatus;
        });

        const staffTableBody = document.getElementById('staffTableBody');
        staffTableBody.innerHTML = ''; // Clear existing entries

        filteredData.forEach(staff => {
            appendRowToTable(staff, staff.id);
        });
    }
</script>


import { initializeApp } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js";
import { getDatabase, ref, set, get, child, remove } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-database.js";
import { getAuth, GoogleAuthProvider, signInWithPopup } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-auth.js"; // Import Firebase Auth

// ✅ Firebase Configuration
const firebaseConfig = {
  apiKey: "AIzaSyCz8GoyOi7wviejSPG2CGkOYvEwsaAWX0w",
  authDomain: "damotak-students-database.firebaseapp.com",
  databaseURL: "https://damotak-students-database-default-rtdb.firebaseio.com/",
  projectId: "damotak-students-database",
  storageBucket: "damotak-students-database.firebasestorage.app",
  messagingSenderId: "806502646085",
  appId: "1:806502646085:web:36a97f1d1e0ff4bab6be2c"
};

// 🔥 Initialize Firebase
const app = initializeApp(firebaseConfig);
const db = getDatabase(app);
const auth = getAuth(app); // Initialize Firebase Auth

// ----------------------
// 🎓 Handle Google Sign-In
// ----------------------
const signInButton = document.getElementById("googleSignInButton");
if (signInButton) {
  signInButton.addEventListener("click", async () => {
    const provider = new GoogleAuthProvider();
    try {
      const result = await signInWithPopup(auth, provider);
      const user = result.user;
      console.log("User signed in: ", user);
      // Additional logic after successful sign-in can be added here
    } catch (error) {
      console.error("Error during sign-in: ", error);
      showNotification("❌ Sign-in failed: " + error.message, false);
    }
  });
}

// ----------------------
// 🎓 Handle Student Registration
// ----------------------
const studentForm = document.getElementById("studentForm");
if (studentForm) {
  studentForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    const name = document.getElementById("studentName").value.trim();
    const email = document.getElementById("studentEmail").value.trim();
    const phone = document.getElementById("studentPhone")?.value.trim() || "";
    const year = document.getElementById("studentYear")?.value || "";
    const gender = document.getElementById("studentGender")?.value;
    const studentClass = document.getElementById("studentClass")?.value;
    const term = document.getElementById("studentTerm")?.value;

    if (!name || !email || !gender || !studentClass || !term) {
      showNotification("⚠️ Please fill in all required fields.", false);
      return;
    }

    try {
      const randomNum = Math.floor(1000 + Math.random() * 9000);
      const studentID = `${name.replace(/\s+/g, "").toLowerCase()}-${randomNum}`;

      const studentData = {
        studentID,
        name,
        email,
        phone,
        year,
        gender,
        studentClass,
        term,
        createdAt: new Date().toISOString(),
        active: true
      };

      await set(ref(db, "Students/" + studentID), studentData);

      showNotification(`✅ Student "${name}" added successfully!`, true);
      studentForm.reset();
      renderStudents(); // Refresh table after adding
    } catch (error) {
      console.error("Error saving student:", error);
      showNotification("❌ Failed to add student: " + error.message, false);
    }
  });
}

// ----------------------
// 🔔 Notification Popup
// ----------------------
function showNotification(message, success) {
  const msgDiv = document.getElementById("notificationMessage");
  if (!msgDiv) return;
  msgDiv.textContent = message;
  msgDiv.style.color = success ? "green" : "red";
  new bootstrap.Modal(document.getElementById("notificationModal")).show();
}

// ----------------------
// 📋 Student Table & Management
// ----------------------
const studentsTableBody = document.getElementById("studentsTableBody");
const classFilter = document.getElementById("classFilter");
const searchInput = document.getElementById("searchInput");

// Fetch students from Firebase
async function fetchStudents() {
  try {
    const dbRef = ref(db);
    const snapshot = await get(child(dbRef, "Students"));
    return snapshot.exists() ? snapshot.val() : {};
  } catch (error) {
    console.error(error);
    return {};
  }
}

// Render students in table
async function renderStudents(filterClass = null, searchQuery = "") {
  if (!studentsTableBody) return;

  const allStudents = await fetchStudents();
  const students = Object.values(allStudents).filter(student => {
    const matchClass = !filterClass || filterClass === "Classes" || student.studentClass === filterClass;
    const matchSearch = student.name.toLowerCase().includes(searchQuery.toLowerCase());
    return matchClass && matchSearch;
  });

  studentsTableBody.innerHTML = "";
  let count = 1;
  students.forEach(student => {
    const tr = document.createElement("tr");
    tr.innerHTML = `
      <td>
        <div class="d-flex align-items-center gap-10">
          <div class="form-check style-check d-flex align-items-center">
            <input class="form-check-input radius-4 border border-neutral-400" type="checkbox">
          </div>
          ${count++}
        </div>
      </td>
      <td>${new Date(student.createdAt).toLocaleDateString()}</td>
      <td>${student.name}</td>
      <td>${student.email}</td>
      <td>${student.studentClass}</td>
      <td>${student.gender}</td>
      <td class="text-center">
        <span class="${student.active ? 'bg-success-focus text-success-600 border border-success-main' : 'bg-neutral-200 text-neutral-600 border border-neutral-400'} px-24 py-4 radius-4 fw-medium text-sm">
          ${student.active ? 'Active' : 'Inactive'}
        </span>
      </td>
      <td class="text-center">
        <button class="view-btn btn btn-info btn-sm">View</button>
        <button class="edit-btn btn btn-success btn-sm">Edit</button>
        <button class="delete-btn btn btn-danger btn-sm">Delete</button>
      </td>
    `;

    // Actions
    tr.querySelector(".delete-btn").addEventListener("click", () => deleteStudent(student.studentID));
    tr.querySelector(".edit-btn").addEventListener("click", () => openModal(student, true));
    tr.querySelector(".view-btn").addEventListener("click", () => openModal(student, false));

    studentsTableBody.appendChild(tr);
  });
}

// Delete student
async function deleteStudent(id) {
  if (!confirm("Are you sure you want to delete this student?")) return;
  await remove(ref(db, "Students/" + id));
  showNotification("✅ Student deleted successfully!", true);
  renderStudents(classFilter?.value, searchInput?.value);
}

// Open View/Edit Modal
function openModal(student, editable = false) {
  const modal = document.getElementById("studentModal");
  if (!modal) return;

  document.getElementById("studentModalTitle").textContent = editable ? "Edit Student" : "View Student";
  document.getElementById("modalStudentID").value = student.studentID;
  document.getElementById("modalStudentName").value = student.name;
  document.getElementById("modalStudentEmail").value = student.email;
  document.getElementById("modalStudentClass").value = student.studentClass;
  document.getElementById("modalStudentGender").value = student.gender;

  document.getElementById("modalStudentName").disabled = !editable;
  document.getElementById("modalStudentEmail").disabled = !editable;
  document.getElementById("modalStudentClass").disabled = !editable;
  document.getElementById("modalStudentGender").disabled = !editable;

  new bootstrap.Modal(modal).show();
}

// Edit student form submit
const editForm = document.getElementById("editStudentForm");
if (editForm) {
  editForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    const id = document.getElementById("modalStudentID").value;
    const updatedData = {
      studentID: id,
      name: document.getElementById("modalStudentName").value,
      email: document.getElementById("modalStudentEmail").value,
      studentClass: document.getElementById("modalStudentClass").value,
      gender: document.getElementById("modalStudentGender").value,
      createdAt: new Date().toISOString(),
      active: true
    };
    await set(ref(db, "Students/" + id), updatedData);
    showNotification("✅ Student updated successfully!", true);
    renderStudents(classFilter?.value, searchInput?.value);
    bootstrap.Modal.getInstance(document.getElementById("studentModal")).hide();
  });
}

// Filter & Search events
classFilter?.addEventListener("change", () => renderStudents(classFilter.value, searchInput.value));
searchInput?.addEventListener("input", () => renderStudents(classFilter.value, searchInput.value));

// Initial render
renderStudents();


<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content radius-16 bg-base p-3">
      <div class="modal-header border-0">
        <h5 class="modal-title text-danger" id="deleteModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body text-center">
        <p>⚠️ Are you sure you want to delete this class?</p>
      </div>
      <div class="modal-footer border-0 justify-content-center">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDelete">Yes, Delete</button>
      </div>
    </div>
  </div>
</div>


<!-----NEW ONE----->

admin login details 
email: Damotokeadmin@gmail.com
password: 123456789


// result-add.js
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js";
import { getDatabase, ref, get } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-database.js";
import { saveResult } from "./result-save.js";

// ---------------------------
// Firebase Configs
// ---------------------------
const studentFirebaseConfig = {
  apiKey: "AIzaSyCz8GoyOi7wviejSPG2CGkOYvEwsaAWX0w",
  authDomain: "damotak-students-database.firebaseapp.com",
  databaseURL: "https://damotak-students-database-default-rtdb.firebaseio.com/",
  projectId: "damotak-students-database",
  storageBucket: "damotak-students-database.firebasestorage.app",
  messagingSenderId: "806502646085",
  appId: "1:806502646085:web:36a97f1d1e0ff4bab6be2c"
};

const resultFirebaseConfig = {
  apiKey: "AIzaSyDcrh8wVfeVwnOKnt-AcWDMOmxqNWe_0Uw",
  authDomain: "damotak-result-database.firebaseapp.com",
  databaseURL: "https://damotak-result-database-default-rtdb.firebaseio.com/",
  projectId: "damotak-result-database",
  storageBucket: "damotak-result-database.firebasestorage.app",
  messagingSenderId: "413754960869",
  appId: "1:413754960869:web:b3f51b6aaa0c667af0dd0c"
};

// ---------------------------
// Initialize Firebase Apps
// ---------------------------
const studentApp = initializeApp(studentFirebaseConfig, "studentDB");
const studentDb = getDatabase(studentApp);

const resultApp = initializeApp(resultFirebaseConfig, "resultDB");
const resultDb = getDatabase(resultApp);

// ---------------------------
// Page Setup
// ---------------------------
const urlParams = new URLSearchParams(window.location.search);
const studentID = urlParams.get("id");
document.getElementById("dateIssued").textContent = new Date().toLocaleDateString();

const tbody = document.getElementById("resultTableBody");

// ---------------------------
// Notification Helper
// ---------------------------
function showNotification(message, success) {
  const msgDiv = document.getElementById("notificationMessage");
  if (!msgDiv) return alert(message);
  msgDiv.textContent = message;
  msgDiv.style.color = success ? "green" : "red";
  new bootstrap.Modal(document.getElementById("notificationModal")).show();
}

// ---------------------------
// Load Student Info
// ---------------------------
async function loadStudent() {
  try {
    const snap = await get(ref(studentDb, `Students/${studentID}`));
    if (snap.exists()) {
      const data = snap.val();
      document.getElementById("studentName").textContent = data.name || "N/A";
      document.getElementById("studentClass").textContent = data.studentClass || "N/A";
      document.getElementById("studentGender").textContent = data.gender || "N/A";
    } else {
      showNotification("❌ Student not found!", false);
    }
  } catch (err) {
    showNotification("⚠️ Error loading student info: " + err.message, false);
  }
}
loadStudent();

// ---------------------------
// Table Functions
// ---------------------------
function addSubjectRow(subject = "", ca = "", exam = "", total = "0", grade = "-", remark = "-", readOnly = false) {
  const row = document.createElement("tr");
  row.innerHTML = `
    <td class="sl">${tbody.children.length + 1}</td>
    <td><input type="text" class="form-control subject-input" value="${subject}" ${readOnly ? "readonly" : ""}></td>
    <td><input type="number" class="form-control ca-input" value="${ca}" min="0" max="30" ${readOnly ? "readonly" : ""}></td>
    <td><input type="number" class="form-control exam-input" value="${exam}" min="0" max="70" ${readOnly ? "readonly" : ""}></td>
    <td class="total-score">${total}</td>
    <td class="grade">${grade}</td>
    <td class="remark">${remark}</td>
    <td class="text-center">
      ${readOnly ? "" : '<button class="btn btn-danger btn-sm remove-row">✕</button>'}
    </td>
  `;
  tbody.appendChild(row);
  refreshRowNumbers();
}

function refreshRowNumbers() {
  Array.from(tbody.children).forEach((tr, i) => tr.querySelector(".sl").textContent = i + 1);
}

// ---------------------------
// Add / Remove Rows
// ---------------------------
document.getElementById("addRow").addEventListener("click", () => addSubjectRow());
tbody.addEventListener("click", (e) => {
  if (e.target.classList.contains("remove-row")) {
    e.target.closest("tr").remove();
    refreshRowNumbers();
  }
});

// ---------------------------
// Auto Calculate Grades
// ---------------------------
tbody.addEventListener("input", (e) => {
  if (e.target.classList.contains("ca-input") || e.target.classList.contains("exam-input")) {
    const tr = e.target.closest("tr");
    const ca = parseInt(tr.querySelector(".ca-input").value) || 0;
    const exam = parseInt(tr.querySelector(".exam-input").value) || 0;
    const total = ca + exam;
    let grade = "-", remark = "-";
    if (total >= 70) { grade = "A"; remark = "Excellent"; }
    else if (total >= 60) { grade = "B"; remark = "Very Good"; }
    else if (total >= 50) { grade = "C"; remark = "Good"; }
    else if (total >= 40) { grade = "D"; remark = "Fair"; }
    else { grade = "F"; remark = "Fail"; }
    tr.querySelector(".total-score").textContent = total;
    tr.querySelector(".grade").textContent = grade;
    tr.querySelector(".remark").textContent = remark;
  }
});

// ---------------------------
// Load Previous Results
// ---------------------------
async function loadPreviousResults() {
  const term = document.getElementById("studentTerm")?.value?.trim();
  if (!term || !studentID) return;

  try {
    const snapshot = await get(ref(resultDb, `Results/${studentID}/${term}`));
    tbody.innerHTML = "";

    if (snapshot.exists()) {
      const data = snapshot.val();
      const subjects = data.Subjects || {};
      Object.keys(subjects).forEach(sub => {
        const s = subjects[sub];
        addSubjectRow(s.subject || sub, s.ca || 0, s.exam || 0, s.total || 0, s.grade || "-", s.remark || "-", true);
      });

      document.getElementById("classTeacherRemark").value = data.classTeacherRemark || "";
      document.getElementById("headTeacherRemark").value = data.headTeacherRemark || "";
       document.getElementById("workEdu").value = data.workEdu || "";
        document.getElementById("artEdu").value = data.artEdu || "";
        document.getElementById("healthEdu").value = data.healthEdu || "";
        
      showNotification("✅ Loaded previous results!", true);
    } else {
      addSubjectRow();
      showNotification("ℹ️ No previous result found.", false);
    }
  } catch (err) {
    console.error(err);
    showNotification("⚠️ Failed to load results: " + err.message, false);
  }
}

document.getElementById("studentTerm").addEventListener("change", loadPreviousResults);
window.addEventListener("load", () => setTimeout(loadPreviousResults, 200));

// ---------------------------
// Save Result
// ---------------------------
document.getElementById("saveResult").addEventListener("click", async () => {
  const term = document.getElementById("studentTerm").value.trim();
  const classTeacherRemark = document.getElementById("classTeacherRemark").value.trim();
  const headTeacherRemark = document.getElementById("headTeacherRemark").value.trim();
  const workEdu = document.getElementById("workEdu").value.trim();
  const artEdu = document.getElementById("artEdu").value.trim();
  const healthEdu = document.getElementById("healthEdu").value.trim();


  const subjects = [];
  tbody.querySelectorAll("tr").forEach(tr => {
    const subject = tr.querySelector(".subject-input").value.trim();
    const ca = parseInt(tr.querySelector(".ca-input").value) || 0;
    const exam = parseInt(tr.querySelector(".exam-input").value) || 0;
    const total = ca + exam;
    const grade = tr.querySelector(".grade").textContent || "-";
    const remark = tr.querySelector(".remark").textContent || "-";
    if (subject && !tr.querySelector(".subject-input").readOnly) {
      subjects.push({ subject, ca, exam, total, grade, remark });
    }
  });

  if (!subjects.length) return showNotification("⚠️ Add at least one new subject.", false);

  const resultData = {
    studentID,
    term,
    classTeacherRemark,
    headTeacherRemark,
    workEdu,
    artEdu,
    healthEdu,
    dateIssued: new Date().toLocaleDateString(),
    subjects
  };

  const res = await saveResult(studentID, term, resultData);
  showNotification(res.message, res.success);
  if (res.success) setTimeout(loadPreviousResults, 400);
});

//Print code //

// ---------------------------
// Print Result Function (Auto Print After 2s + Dynamic File Name)
// ---------------------------
document.getElementById("PrintResult").addEventListener("click", () => {
  const modal = new bootstrap.Modal(document.getElementById("printConfirmModal"));
  modal.show();

  document.getElementById("confirmPrintBtn").onclick = () => {
    modal.hide();

    // Hide "Add New Subject" button temporarily
    const addSubjectBtn = document.getElementById("addRow");
    if (addSubjectBtn) addSubjectBtn.style.display = "none";

    // Clone and clean result table
    const resultTable = document.getElementById("resultTable").cloneNode(true);

    // Remove "Action" column
    const headerRow = resultTable.querySelector("thead tr");
    if (headerRow && headerRow.lastElementChild.textContent.trim().toLowerCase() === "action") {
      headerRow.removeChild(headerRow.lastElementChild);
    }

    // Remove "Action" cells in body
    resultTable.querySelectorAll("tbody tr").forEach(row => {
      if (row.lastElementChild) row.removeChild(row.lastElementChild);
    });

    // Convert inputs to plain text
    resultTable.querySelectorAll("input, select").forEach(el => {
      const td = el.parentElement;
      td.textContent = el.value || "-";
    });

    // Get student info
    const studentName = document.getElementById("studentName").textContent.trim();
    const studentGender = document.getElementById("studentGender").textContent.trim();
    const studentClass = document.getElementById("studentClass").textContent.trim();
    const term = document.getElementById("studentTerm").value || document.getElementById("studentTerm").textContent.trim();
    const dateIssued = document.getElementById("dateIssued").textContent.trim();
    const sessionYear = document.getElementById("sessionYear")?.textContent.trim() || "2025/2026";
    const classRemark = document.getElementById("classTeacherRemark").value || "-";
    const headRemark = document.getElementById("headTeacherRemark").value || "-";
    const workEdu = document.getElementById("workEdu")?.value || "-";
    const artEdu = document.getElementById("artEdu")?.value || "-";
    const healthEdu = document.getElementById("healthEdu")?.value || "-";
    const studentID = document.getElementById("studentID")?.textContent.trim() || "UnknownID";

    // Calculate total and average
    const totals = Array.from(resultTable.querySelectorAll(".total-score")).map(td => parseInt(td.textContent) || 0);
    const totalScore = totals.reduce((a, b) => a + b, 0);
    const avgScore = totals.length ? (totalScore / totals.length).toFixed(2) : "0.00";

    // Build print window
    const printWindow = window.open("", "_blank", "width=900,height=1000");
    printWindow.document.open();
    printWindow.document.write(`
      <html>
        <head>
          <title>Preparing result...</title>
          <style>
            body {
              font-family: 'Segoe UI', sans-serif;
              margin: 20px;
              color: #000;
            }
            .header {
              text-align: center;
              border-bottom: 2px solid #000;
              padding-bottom: 10px;
              margin-bottom: 20px;
            }
            .header img {
              width: 90px;
              display: block;
              margin: 0 auto;
            }
            .header h3 {
              margin: 5px 0;
              font-size: 22px;
              text-transform: uppercase;
            }
            .header p {
              margin: 0;
              font-size: 13px;
            }
            .info-table, .table {
              width: 100%;
              border-collapse: collapse;
              margin-bottom: 15px;
              font-size: 13px;
            }
            .info-table td {
              padding: 5px 10px;
            }
            .table th, .table td {
              border: 1px solid #333;
              padding: 6px;
              text-align: center;
            }
            .section-title {
              font-weight: bold;
              margin-top: 20px;
              margin-bottom: 6px;
              border-bottom: 1px solid #000;
              font-size: 14px;
            }
            .summary-table td {
              padding: 4px 10px;
              font-size: 13px;
            }
            .signatures {
              display: flex;
              justify-content: space-between;
              margin-top: 40px;
            }
            .sign {
              border-top: 1px solid #000;
              padding-top: 5px;
              font-size: 12px;
              text-align: center;
              width: 45%;
            }
            @media print {
              @page { size: A4; margin: 1cm; }
            }
          </style>
        </head>
        <body>
          <div class="header">
            <img src="assets/images/logo.png" alt="School Logo">
            <h3>Damotak International School</h3>
            <p>Ring Road, Old Oba Road | Email: admin@gmail.com | +23456789</p>
            <p><strong>Academic Session:</strong> ${sessionYear}</p>
          </div>

          <table class="info-table">
            <tr><td><strong>Name:</strong> ${studentName}</td><td><strong>Gender:</strong> ${studentGender}</td></tr>
            <tr><td><strong>Class:</strong> ${studentClass}</td><td><strong>Term:</strong> ${term}</td></tr>
            <tr><td><strong>Student ID:</strong> ${studentID}</td><td><strong>Date Issued:</strong> ${dateIssued}</td></tr>
            <tr><td colspan="2"><strong>Issued By:</strong> Damotak Admin</td></tr>
          </table>

          <div class="section-title">Subjects and Scores</div>
          ${resultTable.outerHTML}

          <div class="section-title">Summary</div>
          <table class="summary-table">
            <tr><td><strong>Total Marks:</strong></td><td>${totalScore}</td></tr>
            <tr><td><strong>Average Score:</strong></td><td>${avgScore}</td></tr>
          </table>

          <div class="section-title">Remarks</div>
          <table class="table">
            <tr><th>Class Teacher Remark</th><td>${classRemark}</td></tr>
            <tr><th>Head Teacher Remark</th><td>${headRemark}</td></tr>
          </table>

          <div class="section-title">Co-Scholastic Areas (A–C Grade)</div>
          <table class="table">
            <tr><th>Area</th><th>Grade</th></tr>
            <tr><td>Work Education / Prevocational Education</td><td>${workEdu}</td></tr>
            <tr><td>Art Education</td><td>${artEdu}</td></tr>
            <tr><td>Health & Physical Education</td><td>${healthEdu}</td></tr>
          </table>

          <br><br>
          <div class="signatures">
            <div class="sign">Class Teacher’s Signature</div>
            <div class="sign">Headmaster’s Signature</div>
          </div>
        </body>
      </html>
    `);
    printWindow.document.close();

    // ✅ Print logic after delay with dynamic file name
    printWindow.onload = () => {
      const fileTitle = `${studentName.replace(/\s+/g, "_")}_${studentID}_Result`;
      printWindow.document.title = fileTitle;

      // Wait 2 seconds before showing print dialog
      setTimeout(() => {
        printWindow.focus();
        printWindow.print();
      }, 2000);

      printWindow.onafterprint = () => {
        printWindow.close();
        location.href = "result-add.html";
      };
      printWindow.onbeforeunload = () => {
        location.href = "result-add.html";
      };
    };

    // Restore Add New Subject button after print
    setTimeout(() => {
      if (addSubjectBtn) addSubjectBtn.style.display = "inline-block";
    }, 3000);
  };
});

// ---------------------------
// Navigation Buttons
// ---------------------------
document.getElementById("backBtn").addEventListener("click", () => window.location.href = "result-list.html");
document.getElementById("previewResult").addEventListener("click", () => window.location.href = "result preview.html");
